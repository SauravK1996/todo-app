[{"H:\\React\\hooks-todos\\src\\index.js":"1","H:\\React\\hooks-todos\\src\\App.js":"2","H:\\React\\hooks-todos\\src\\reducer.js":"3","H:\\React\\hooks-todos\\src\\Components\\TodoList.js":"4","H:\\React\\hooks-todos\\src\\Components\\TodoForm.js":"5","H:\\React\\hooks-todos\\src\\context.js":"6"},{"size":195,"mtime":1606398932049,"results":"7","hashOfConfig":"8"},{"size":644,"mtime":1606449082982,"results":"9","hashOfConfig":"8"},{"size":2299,"mtime":1606401085375,"results":"10","hashOfConfig":"8"},{"size":2226,"mtime":1606399346907,"results":"11","hashOfConfig":"8"},{"size":1119,"mtime":1606402771523,"results":"12","hashOfConfig":"8"},{"size":323,"mtime":1606449103321,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"te3psj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\React\\hooks-todos\\src\\index.js",[],["28","29"],"H:\\React\\hooks-todos\\src\\App.js",["30"],"H:\\React\\hooks-todos\\src\\reducer.js",[],"H:\\React\\hooks-todos\\src\\Components\\TodoList.js",[],"H:\\React\\hooks-todos\\src\\Components\\TodoForm.js",["31"],"import React, {useState,useEffect, useContext} from 'react';\r\nimport TodosContext from '../context';\r\n\r\nconst TodoForm = () => {\r\n    const [todo, setTodo] = useState(\"\");\r\n    const {state: {currentTodo = {}}, dispatch} = useContext(TodosContext);\r\n\r\n    useEffect(() => {\r\n        if(currentTodo.text){\r\n            setTodo(currentTodo.text);\r\n        }else{\r\n            setTodo(\"\");\r\n        }\r\n    },[currentTodo.id]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(currentTodo.text){\r\n            dispatch({type: \"UPDATE_TODO\", payload: todo})\r\n        }else{\r\n            dispatch({type: \"ADD_TODO\", payload: todo})\r\n        }\r\n        \r\n        setTodo(\"\");\r\n    }\r\n\r\n    return(\r\n        <form \r\n            onSubmit={handleSubmit}\r\n            className=\"flex justify-center p-5\">\r\n            <input \r\n                type=\"text\"\r\n                className=\"border-black brder-solid border-2\"\r\n                onChange={event => setTodo(event.target.value)}\r\n                value={todo}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","H:\\React\\hooks-todos\\src\\context.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":13},{"ruleId":"40","severity":1,"message":"41","line":14,"column":7,"nodeType":"42","endLine":14,"endColumn":23,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentTodo.text'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [currentTodo.id, currentTodo.text]",{"range":"49","text":"50"},[405,421],"[currentTodo.id, currentTodo.text]"]